{"version":3,"sources":["components/Header/Header.js","components/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["header","class","id","form","for","type","name","placeholder","required","min","max","disabled","selected","value","checked","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ecb8ff34.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction header() {\n  return (\n    <header class=\"header\">\n        <h1 id=\"title\" class=\"text-center\">freeCodeCamp Survey Form</h1>\n        <p id=\"description\" class=\"description text-center\">\n        Thank you for taking the time to help us improve the platform\n        </p>\n    </header>\n  );\n}\n\nexport default header;\n","import React from 'react';\nimport './Form.css';\n\nfunction form() {\n  return (\n    <form id=\"survey-form\">\n        <div class=\"form-group\">\n            <label id=\"name-label\" for=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" class=\"form-control\" placeholder=\"Enter your name\" required />\n        </div>\n        <div class=\"form-group\">\n            <label id=\"email-label\" for=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Enter your Email\" required />\n            </div>\n            <div class=\"form-group\">\n            <label id=\"number-label\" for=\"number\">Age<span class=\"clue\">(optional)</span></label\n                >\n            <input type=\"number\" name=\"age\" id=\"number\" min=\"10\" max=\"99\" class=\"form-control\" placeholder=\"Age\" />\n        </div>\n        <div class=\"form-group\">\n            <p>Which option best describes your current role?</p>\n            <select id=\"dropdown\" name=\"role\" class=\"form-control\" required>\n            <option disabled selected value>Select current role</option>\n            <option value=\"student\">Student</option>\n            <option value=\"job\">Full Time Job</option>\n            <option value=\"learner\">Full Time Learner</option>\n            <option value=\"preferNo\">Prefer not to say</option>\n            <option value=\"other\">Other</option>\n            </select>\n            </div>\n            <div class=\"form-group\">\n            <p>Would you recommend freeCodeCamp to a friend?</p>\n            <label>\n            <input name=\"user-recommend\" value=\"definitely\" type=\"radio\" class=\"input-radio\" checked />Definitely</label\n                >\n            <label>\n            <input name=\"user-recommend\" value=\"maybe\" type=\"radio\" class=\"input-radio\" />Maybe</label\n                >\n            <label><input name=\"user-recommend\" value=\"not-sure\" type=\"radio\" class=\"input-radio\" />Not sure</label\n                >\n        </div>\n        <div class=\"form-group\">\n            <p>\n            What is your favorite feature of freeCodeCamp?\n            </p>\n            <select id=\"most-like\" name=\"mostLike\" class=\"form-control\" required>\n            <option disabled selected value>Select an option</option>\n            <option value=\"challenges\">Challenges</option>\n            <option value=\"projects\">Projects</option>\n            <option value=\"community\">Community</option>\n            <option value=\"openSource\">Open Source</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <p>\n            What would you like to see improved?\n            <span class=\"clue\">(Check all that apply)</span>\n            </p>\n            <label><input name=\"prefer\" value=\"front-end-projects\" type=\"checkbox\" class=\"input-checkbox\" />Front-end Projects</label\n                >\n            <label>\n            <input name=\"prefer\" value=\"back-end-projects\" type=\"checkbox\" class=\"input-checkbox\" />Back-end Projects</label\n                >\n            <label><input name=\"prefer\" value=\"data-visualization\" type=\"checkbox\" class=\"input-checkbox\" />Data Visualization</label\n                >\n            <label><input name=\"prefer\" value=\"challenges\" type=\"checkbox\" class=\"input-checkbox\" />Challenges</label\n                >\n            <label><input name=\"prefer\" value=\"open-source-community\" type=\"checkbox\" class=\"input-checkbox\" />Open Source Community</label\n                >\n            <label><input name=\"prefer\" value=\"gitter-help-rooms\" type=\"checkbox\" class=\"input-checkbox\" />Gitter help rooms</label\n                >\n            <label><input name=\"prefer\" value=\"videos\" type=\"checkbox\" class=\"input-checkbox\" />Videos</label\n                >\n            <label><input name=\"prefer\" value=\"city-meetups\" type=\"checkbox\" class=\"input-checkbox\" />City Meetups</label\n                >\n            <label><input name=\"prefer\" value=\"wiki\" type=\"checkbox\" class=\"input-checkbox\" />Wiki</label\n                >\n            <label><input name=\"prefer\" value=\"forum\" type=\"checkbox\" class=\"input-checkbox\" />Forum</label\n                >\n            <label><input name=\"prefer\" value=\"additional-courses\" type=\"checkbox\" class=\"input-checkbox\" />Additional Courses</label\n                >\n        </div>\n        <div class=\"form-group\">\n            <p>Any comments or suggestions?</p>\n            <textarea id=\"comments\" class=\"input-textarea\" name=\"comment\" placeholder=\"Enter your comment here...\"></textarea>\n            </div>\n            <div class=\"form-group\">\n            <button type=\"submit\" id=\"submit\" class=\"submit-button\">\n            Submit\n            </button>\n        </div>\n    </form>\n  );\n}\n\nexport default form;\n","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header/Header';\nimport Form from './components/Form/Form';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}